.. _rust-stable-api:

==============
{+stable-api+}
==============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. important::

   To use the {+stable-api+} feature, you must connect to a deployment running MongoDB Server version 5.0 or later.

   You should only use the {+stable-api+} feature if all the MongoDB
   servers you are connecting to support this feature.

Overview
--------

In this guide, you can learn how to specify **{+stable-api+}**
compatibility when connecting to a MongoDB instance or replica set.

The {+stable-api+} feature forces the server to run operations with
behaviors that are compatible with the **API version** you specify. An API
version defines the expected behavior of the operations it covers and
the format of server responses. The operations and the server responses
may differ depending on the API version you specify.

When you use the {+stable-api+} feature with an official MongoDB driver, you
can update your driver or server without worrying about backward
compatibility issues of the commands covered by the {+stable-api+}.

To learn more about the commands that the server covers, see
:manual:`{+stable-api+} </reference/stable-api/>` in the Server manual.

Specify an API Version
----------------------

To specify an API version, define a ``ServerApi`` struct and set the ``server_api`` field
of your ``ClientOptions`` instance to this struct.
The ``ServerApi`` struct contains your server API version and options.
To learn more about the options, see the :ref:`Modify Behavior <rust-stable-api-options>` section of this guide.

After you specify an API version, the client runs operations that are compatible with the API version.

.. note::

   The {+driver-long+} currently supports only {+stable-api+} version 1.

API Version Specification Example
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example sets the {+stable-api+} version when instantiating a ``Client``
and connects to a server.

.. literalinclude:: /includes/fundamentals/code-snippets/stable-api.rs
   :language: rust
   :dedent:
   :start-after: start-stable-api
   :end-before: end-stable-api

.. _rust-stable-api-options:

Modify Behavior
---------------

You can modify the behavior of the {+stable-api+} feature by setting fields in the ``ServerApi`` struct.

While you can set the fields in a ``ServerApi`` struct manually, you can use the builder design pattern to define the struct more efficiently.

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :class: compatibility-large

   * - Field
     - Description

   * - ``version``
     - | The {+stable-api+} version to use.
       | Specified with the ``ServerAPIVersion`` enum.

       | Type: ``ServerAPIVersion``
       | Default: ``ServerAPIVersion1``

   * - ``strict``
     - | Indicates whether the server should return errors for features that aren't part of the API version.
       |
       | Type: ``bool``
       | Default: ``false``

   * - ``deprecation_errors``
     - | Indicates whether the server should return errors for deprecated features.
       |
       | Type: ``bool``
       | Default: ``false``

.. _rust-stable-api-options-example:

Stable API Options Example
~~~~~~~~~~~~~~~~~~~~~~~~~~

This example enables the {+stable-api+} feature with the following specifications:

- Uses {+stable-api+} version 1
- Returns errors for features that aren't part of version 1
- Returns errors for deprecated features

.. literalinclude:: /includes/fundamentals/code-snippets/stable-api-behavior.rs
   :language: rust
   :dedent:
   :start-after: start-stable-api-behavior
   :end-before: end-stable-api-behavior

Additional Information
----------------------

To learn more about connecting to your MongoDB instance or replica set,
see the :ref:`rust-connect-to-mongodb`.

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about any of the methods or types discussed in this
guide, see the following API Documentation:

- `Client <{+api+}/struct.Client.html>`__
- `ClientOptions <{+api+}/options/struct.ClientOptions.html>`__
- `ServerAPI <{+api+}/options/struct.ServerApi.html>`__
- `ServerApiVersion <{+api+}/options/enum.ServerApiVersion.html>`__
- `with_options() <{+api+}/options/struct.Client.html#method.with_options>`__

