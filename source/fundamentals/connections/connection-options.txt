.. _rust-connection-options:

=====================
Connection Options
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

In this guide, you can learn about MongoDB connection and authentication
options. You can pass connection options as parameters of the connection
string URI to specify the behavior of the client. To learn more about connection strings, see
:manual:`Connection String URI Format </reference/connection-string>` in the Server

.. TODO link to the authentication mechanisms guide in authMechanism below

.. list-table::
   :header-rows: 1
   :widths: 30 12 12 46

   * - Option Name
     - Accepted Values
     - Default Value
     - Description

   * - **appName**
     - Any string
     - None
     - Specifies the application name that the ``Client`` instance sends to the server as part of the handshake.
       Specifying an ``appName`` can help you use the server logs to determine which ``Client`` instance is connected
       to the server.

   * - **authMechanism**
     - Any string
     - None
     - Specifies which authentication mechanism to use.
       If empty, one will be negotiated with the server.

   * - **authMechanismProperties**
     - Any string
     - None
     - Specifies additional properties for the authentication mechanism
       specified in the ``authMechanism`` option.

   * - **authSource**
     - Any string
     - See description
     - Specifies the database used to authenticate.
       This option defaults to ``admin`` for SCRAM-based authentication mechanisms,
       ``$external`` for the ``MONGODB-X509`` mechanism, and the database name or
       ``$external`` for the ``PLAIN`` mechanism.

   * - **compressors**
     - A comma-separated list of strings
     - None
     - Specifies compressors that the ``Client`` instance uses in the specified order.

   * - ***connectTimeoutMS***
     - Non-negative integer
     - 10000
     - Specifies the connection timeout, in milliseconds, passed to each underlying TCP stream when attempting to connect to the server.

   * - **direct**
     - Boolean
     - ``false``
     - Specifies whether the ``Client`` instance directly connects to a single host
       instead of discovering and connecting to all of the servers in the cluster.

   * - **heartbeatFrequencyMS**
     - Integer greater than or equal to 500
     - 10000
     - Specifies the amount of time, in milliseconds, that each monitoring thread waits between performing server checks.

   * - **journal**
     - Boolean
     - ``false``
     - Requests acknowledgment that the operation propagated to the on-disk journal.

   * - **localThresholdMS**
     - Non-negative integer
     - 15
     - Specifies how much longer, in milliseconds, that the average round trip time between the driver and server can be
       compared to the least round trip time of all the suitable servers.
       A value of ``0`` indicates that there is no latency window, so only the server with the lowest average round trip time is eligible.

   * - **maxIdleTimeMS**
     - Non-negative integer
     - 0
     - Specifies the amount of time, in milliseconds, that a connection can remain idle in a connection pool before being closed.
       A value of ``0`` indicates that connections are not closed due to being idle.

   * - **maxStalenessSeconds**
     - -1, or any integer greater than or equal to ``90``
     - ``-1``
     - Specifies the maximum lag, in seconds, behind the primary node that a secondary node can be to be 
       considered for the given operation.

       The value of this option must be at least ``90``, or the operation raises an error.
       A value of ``-1`` means there is no maximum lag.

   * - **maxPoolSize**
     - Non-negative integer
     - 10
     - Specifies the maximum number of connections that the ``Client`` instance can create in a connection pool for a given server.
       If you attempt an operation while the value of ``maxPoolSize`` connections are checked out,
       the operation waits until an in-progress operation finishes and the connection returns to the pool.

   * - **minPoolSize**
     - Non-negative integer
     - 0
     - Specifies the minimum number of connections that are available in a server's connection pool at a given time.
       If fewer than ``minPoolSize`` connections are in the pool,
       the server adds connections in the background up to the value of ``minPoolSize``.

   * - **readConcernLevel**
     - Any string
     - None
     - Specifies the default read concern for operations performed on the ``Client`` instance.
       To learn more, see the `ReadConcern <https://docs.rs/mongodb/latest/mongodb/options/struct.ReadConcern.html>`__
       type API documentation.

   * - **readPreferenceField**
     - Any string
     - ``primary``
     - Specifies how the driver routes a read operation to members of a replica set.
       To learn more, see :manual:`Read Preference </core/read-preference>` in the Server manual.

   * - **readPreferenceTags**
     - A list of comma-separated key-value pairs
     - None
     - Specifies which replica set members are considered for operations.
       Each instance of this key is a separate tag set.
       The driver checks each tag set until it finds one or more servers with each tag in the set.

   * - **replicaSet**
     - Any string
     - None
     - Specifies the name of the replica set that the ``Client`` instance connects to.

   * - **retryReads**
     - Boolean
     - ``true``
     - Specifies whether the client retries a read operation if the operation fails.

   * - **serverSelectionTimeoutMS**
     - Non-negative integer
     - 30000
     - Specifies the amount of time, in milliseconds, that the ``Client`` instance waits when attempting to select a server for an operation before timing out.

   * - **tls**
     - Boolean
     - ``false``
     - Specifies the TLS configuration for the ``Client`` instance to use in its connections with the server.
       By default, TLS is off.

   * - **tlsAllowInvalidCertificates**
     - Boolean
     - ``true``
     - Specifies whether the ``Client`` instance returns an error if the server presents an invalid certificate.
       (Do not set to ``true`` in production.
       This is only for testing.)

   * - **tlsCAFile**
     - Any string
     - See description.
     - Specifies the path to the CA file that the ``Client`` instance uses for TLS.
       If you do not specify this option, the driver uses the Mozilla root certificates from the ``webpki-roots`` crate.

   * - **tlsCertificateKeyFile**
     - Any string
     - None
     - Specifies the path to the certificate file that the ``Client`` instance presents to the server to verify its identify.
       If you do not set this option, the ``Client`` instance does not attempt to verify its identity to the server.

   * - **tlsInsecure**
     - Boolean
     - ``true``
     - Specifies whether the ``Client`` instance returns an error if the server presents an invalid certificate.
       (Do not set to ``true`` in production.
       This is only for testing.)

   * - **w**
     - Non-negative integer or string
     - None
     - Requests acknowledgment that the operation has propagated to a specific number or variety of servers.
       To learn more, see :manual:`Write Concern </core/read-preference>` in the Server manual.

   * - **wTimeoutMS**
     - Non-negative integer
     - No timeout
     - Specifies a time limit for the write concern.
       If an operation has not propagated to the requested level within the time limit, an error will return.

   * - **zlibCompressionLevel**
     - Integer between -1 and 9 (inclusive)
     - ``-1``
     - Specifies the level field of the ``zlib`` compression when in use.
       See the `compressor API documentation <{+api+}/options/enum.Compressor.html#variant.Zlib>`__ for more information.
       (Requires enabling the ``zlib-compression`` feature.)
       ``-1`` means no timeout.

For a full list of options, see the `ClientOptions API documentation <{+api+}/options/struct.ClientOptions.html>`__.
