.. _rust-connection-options:

=====================
Connection Options
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

This section explains several common MongoDB connection and authentication
options. You can pass the connection options as parameters of the connection
URI to specify the behavior of the client. For more information, see
:manual:`Connection String URI Format </reference/connection-string>`.

.. list-table::
   :header-rows: 1
   :widths: 40 12 12 44

   * - Option Name
     - Accepted Values
     - Default Value
     - Description

   * - **appName**
     - string
     - None
     - Specifies application name that the ``Client`` will send to the server as part of the handshake.
       This can be used in combination with the server logs to determine which ``Client`` is connected to a server.

   * - **authMechanism**
     - string
     - None
     - Specifies which authentication mechanism to use.
       If empty, one will be negotiated with the server.

   * - **authMechanismProperties**
     - string
     - None
     - Specifies additional properties for the given mechanism.

   * - **authSource**
     - string
     - See description.
     - The database used to authenticate.
       This applies to all authentication mechanisms and defaults to ``admin`` in SCRAM authentication mechanisms,
       ``$external`` for GSSAPI and MONGODB-X509, and the database name or ``$external`` for PLAIN.

   * - **compressors**
     - comma separated list of strings, for example, "snappy,zlib,zstd"
     - None
     - Specifies compressors that the ``Client`` is willing to use in the order they are specified in the configuration.
       The ``Client`` sends this list of compressors to the server.
       The server responds with the intersection of its supported list of compressors.
       The order of compressors indicates preference of compressors.

   * - ***connectTimeoutMS***
     - non-negative integer
     - 10 seconds
     - Specifies the connection timeout passed to each underlying TCP stream when attempting to connect to the server.

   * - **direct**
     - boolean
     - ``false``
     - Specifies whether the ``Client`` should directly connect to a single host rather than automatically discovering all servers in the cluster.

   * - **heartbeatFrequencyMS**
     - integer greater than or equal to 500
     - 10 seconds
     - Specifies amount of time each monitoring thread should wait between performing server checks.

   * - **journal**
     - boolean
     - ``false``
     - Requests acknowledgment that the operation has propagated to the on-disk journal.

   * - **localThresholdMS**
     - non-negative integer
     - 15 milliseconds
     - Specifies how much longer the average round trip time between the driver and server is allowed to be
       compared to the least round trip time of all the suitable servers.
       A value of zero indicates that there is no latency window, so only the server with the lowest average round trip time is eligible.

   * - **maxIdleTimeMS**
     - non-negative integer
     - 0
     - Specifies the amount of time that a connection can remain idle in a connection pool before being closed.
       A value of zero indicates that connections should not be closed due to being idle.

   * - **maxStalenessSeconds**
     - -1, or an integer greater than or equal 90
     - ``-1``
     - Specifies the maximum amount of lag behind the primary that a secondary can have to be considered for the given operation.
       Any secondaries lagging behind more than this will not be considered for the operation.

       Must be at least 90 seconds; if less, the operation will return an error.
       ``-1`` means there is no maximum.

   * - **maxPoolSize**
     - non-negative integer
     - 10
     - Specifies the maximum number of connections that the ``Client`` is allowed to create in a connection pool for a given server.
       If an operation is attempted on a server while **maxPoolSize** connections are checked out,
       the operation will block until an in-progress operation finishes and its connection returns to the pool.

   * - **minPoolSize**
     - non-negative integer
     - 0
     - Specifies the minimum number of connections that should be available in a server's connection pool at a given time.
       If fewer than **minPoolSize** connections are in the pool, connections will be added to the pool in the background
       until **minPoolSize** is reached.

   * - **readConcernLevel**
     - string
     - None
     - Specifies the default read concern for operations performed on the ``Client``.
       See the `ReadConcern <https://docs.rs/mongodb/latest/mongodb/options/struct.ReadConcern.html>`__
       type documentation for more details.

   * - **readPreferenceField**
     - string
     - "primary"
     - Specifies how the driver should route a read operation to members of a replica set.
       For more information see the :manual:`Read Preference documention </core/read-preference>`.

   * - **readPreferenceTags**
     - comma-separated key:value pairs, for example, "dc:ny,rack:1" and "dc:ny can be specified multiple times, each instance of this key is a separate tag set
     - None
     - Specifies which replica set members should be considered for operations.
       Each tag set will be checked in order until one or more servers is found with each tag in the set.

   * - **replicaSet**
     - string
     - None
     - Specifies the name of the replica set that the ``Client`` should connect to.

   * - **retryReads**
     - boolean
     - true
     - Specifies whether the client should retry a read operation if the operation fails.

   * - **serverSelectionTimeoutMS**
     - non-negative integer
     - 30 seconds
     - Specifies the amount of time the ``Client`` should wait when attempt to select a server for an operation before timing out.

   * - **tls**
     - boolean
     - ``false``
     - Specifies the TLS configuration for the ``Client`` to use in its connections with the server.
       By default, TLS is disabled.

   * - **tlsAllowInvalidCertificates** (or **tlsInsecure**)
     - boolean
     - ``true``
     - Specifies whether or not the ``Client`` should return an error if the server presents an invalid certificate.
       This setting should *not* be set to ``true`` in production.
       It should only be used for testing.

   * - **tlsCAFile**
     - string
     - See description.
     - Specifies the path to the CA file that the ``Client`` should use for TLS.
       If none is specified, then the driver will use the Mozilla root certificates from the ``webpki-roots`` crate.

   * - **tlsCertificateKeyFile**
     - string
     - None
     - Specifies the path to the certificate file that the ``Client`` should present to the server to verify its identify.
       If none is specified, then the ``Client`` will not attempt to verify its identity to the server.

   * - **w**
     - non-negative integer or string
     - None
     - Requests acknowledgment that the operation has propagated to a specific number or variety of servers.

   * - **wTimeoutMS**
     - non-negative integer
     - No timeout
     - Specifies a time limit for the write concern.
       If an operation has not propagated to the requested level within the time limit, an error will return.

       Note that an error being returned due to a write concern error
       does not imply that the write would not have finished propagating if allowed more time to finish,
       and the server will not roll back the writes that occurred before the timeout was reached.

   * - **zlibCompressionLevel**
     - integer between -1 and 9 (inclusive)
     - ``-1``
     - Specifies the level field of the ``zlib`` compression when in use.
       See the `compressor API documentation <{+api+}/options/enum.Compressor.html#variant.Zlib>`__ for more information.
       (Requires enabling the ``zlib-compression`` feature.)
       ``-1`` means no timeout.

For a full list of options, see the `ClientOptions API documentation <{+api+}/options/struct.ClientOptions.html>`__.
