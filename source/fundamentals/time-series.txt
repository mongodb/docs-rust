.. _rust-time-series:

=======================
Time Series Collections
=======================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to use the {+driver-short+} to create
and interact with **time series collections**. Time series collections
efficiently store chronological sequences of measurements over a period
of time. Each document in a time series collection contains the
following pieces of information:

- The quantity that is being measured over time
- Metadata that describes the measurement
- The timestamp for the measurement

The following table describes some sample situations where data could be
stored in a time series collection. Each row describes the situation,
the measured quantity, and the additional metadata in each document:

.. list-table::
   :widths: 40, 30, 30
   :header-rows: 1
   :stub-columns: 1

   * - Situation
     - Measured Quantity
     - Metadata

   * - Industry sales data
     - Revenue in USD
     - Company, country

   * - Weather data
     - Precipitation level
     - Location, sensor type

   * - Housing prices
     - Monthly rent
     - Location, currency

This guide includes the following sections:

- :ref:`Create a Time Series Collection <rust-tseries-create>` describes
  the syntax for creating a time series collection and provides example code

- :ref:`Query a Time Series Collection <rust-tseries-query>` describes how to
  perform operations on time series collections

- :ref:`Additional Information <rust-tseries-addtl-info>`
  provides links to resources and API documentation for types
  and methods mentioned in this guide

.. _rust-tseries-create:

Create a Time Series Collection
-------------------------------

.. important:: Server Version for Time Series Collections

   You must be connected to a deployment running MongoDB 5.0 or later to
   create and interact with time series collections.

To create a time series collection, perform the following actions:

1. Create a ``TimeseriesOptions`` instance that specifies properties of
   your time series collection.

#. Create a ``CreateCollectionOptions`` instance and set the value of
   the ``timeseries`` field to your ``TimeseriesOptions`` instance.

#. Pass the ``CreateCollectionOptions`` instance to the
   ``create_collection()`` method. You must also pass the collection
   name as a parameter.

Example
~~~~~~~

This example creates the ``sept2023`` time series collection in the
``precipitation`` database with the following configuration:

- The time field is ``precipitation_mm``
- The metadata field is ``location``
- The time granularity is minutes

.. literalinclude:: /includes/fundamentals/code-snippets/tseries.rs
   :start-after: begin-create-ts
   :end-before: end-create-ts
   :language: rust
   :dedent:

To verify that you successfully created the time series collection, run
the ``list_collections()`` method on the database and print the results:

.. io-code-block::
   :copyable: true

   .. input:: /includes/fundamentals/code-snippets/tseries.rs
      :start-after: begin-list-colls
      :end-before: end-list-colls
      :language: rust
      :dedent:

   .. output::
      :language: console
      :emphasize-lines: 2-3, 7-15
      :visible: false

      CollectionSpecification {
          name: "sept2023",
          collection_type: Timeseries,
          options: CreateCollectionOptions {
              ...
              timeseries: Some(
                  TimeseriesOptions {
                      time_field: "precipitation_mm",
                      meta_field: Some(
                          "location",
                      ),
                      granularity: Some(
                          Minutes,
                      ),
                  },
              ),
              ...
          },
          ...
      }

.. _rust-tseries-query:

Query a Time Series Collection
------------------------------

You can use the same syntax and conventions to query a time series
collection as you would when performing read or aggregation operations on
normal collections. To find more information about these operations, see
the :ref:`Additional Information <rust-tseries-addtl-info>` section.

.. _rust-tseries-addtl-info:

Additional Information
----------------------

To learn more about the concepts mentioned in this guide, see the
following Server manual entries:

- :manual:`Time Series </core/timeseries-collections/>`
- :manual:`Create and Query a Time Series Collection <>`
- :manual:`Set Granularity for Time Series Data </core/timeseries/timeseries-granularity/>`

To learn more about creating collections, see the guide on
:ref:`rust-db-coll`.

To learn more about performing read operations, see the
:ref:`rust-retrieve-guide` guide.

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about the methods and types mentioned in this
guide, see the following API documentation:

- `find_one() <{+api+}/struct.Collection.html#method.find_one>`__
- `find() <{+api+}/struct.Collection.html#method.find>`__
- `FindOptions <{+api+}/options/struct.FindOptions.html>`__