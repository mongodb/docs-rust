.. _rust-enterprise-auth:

=========================
Enterprise Authentication
=========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to authenticate to MongoDB using the
**authentication mechanisms** available in the MongoDB Enterprise
Edition. When you connect to MongoDB, you can use an authentication
mechanism to establish trust between the driver and the server.

The driver supports only the :ref:`LDAP (Plain) <rust-LDAP>`
authentication mechanism. To learn about authenticating by using the
GSSAPI/Kerberos authentication mechanism, see :manual:`Kerberos Authentication
</core/kerberos/>` in the Server manual.

.. tip::

   .. TODO To authenticate using another mechanism, see the
   .. :ref:`<rust-authentication>` fundamentals page.

   To learn more about connecting to a MongoDB deployment, see the
   :ref:`rust-connect-to-mongodb`.

You can specify an authentication mechanism, your credentials, and other
necessary information in the options in your connection string or in a
``Credential`` struct that you pass as an option when creating a client.

.. _rust-LDAP:

Authenticate to LDAP (PLAIN)
----------------------------

You can authenticate to a Lightweight Directory Access Protocol (LDAP) server 
by using your directory server username and password.

.. warning::

   This authentication mechanism sends the password to the server in
   plaintext, so you should use this mechanism only after enabling TLS
   on your connection.

Example
~~~~~~~

To specify the ``PLAIN`` authentication mechanism, set the
``mechanism`` field of your ``Credential`` struct to
``AuthMechanism::Plain``. This example specifies the
authentication mechanism using the following placeholders:

- ``username``: Your LDAP username
- ``password``: Your LDAP password

.. literalinclude:: /includes/fundamentals/code-snippets/enterprise-auth.rs
   :language: rust
   :dedent:
   :start-after: start-ldap
   :end-before: end-ldap

.. note:

   Since the credentials are stored outside of MongoDB, you must use the
   ``$external`` database for authentication. The ``source`` field of
   the ``Credential`` struct defaults to this database name, so you do
   not need to set this field.

You can alternatively authenticate by using a connection string URI,
specifying your LDAP username, password, and ``hostname``, the network
address of your MongoDB server:

.. code-block:: rust
   
   let uri = "mongodb://<username>:<password>@<hostname>/?authMechanism=PLAIN";

.. note::

   The authentication mechanism refers to PLAIN instead of LDAP since it
   authenticates using the PLAIN Simple Authentication and Security Layer
   (SASL) defined in `RFC-4616 <https://tools.ietf.org/html/rfc4616>`__.

Additional Information
----------------------

To learn more about the concepts in this guide, see the following documentation:

- :manual:`MongoDB Server Support for LDAP Proxy Authentication </core/security-ldap/>`

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about the methods and types discussed in this
guide, see the following API Documentation:

- `Credential <{+api+}/options/struct.Credential.html>`__
- `ClientOptions <{+api+}/options/struct.ClientOptions.html>`__
- `Client <{+api+}/options/struct.Client.html>`__
- `with_options() <{+api+}/struct.Client.html#method.with_options>`__