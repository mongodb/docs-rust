.. _rust-insert-many-usage:

=========================
Insert Multiple Documents
=========================

You can insert multiple documents into a collection by calling the
`insert_many() <{+api+}/struct.Collection.html#method.insert_many>`__ method
on a ``Collection`` instance.

Pass a vector containing one or more documents to the ``insert_many()`` method
to insert them into your collection. If you have only one document to insert,
consider using the ``insert_one()`` method instead.

The ``insert_many()`` method returns a ``Result<InsertManyResult>`` type from which
you can access the ``_id`` values of the inserted documents.

.. tip::

   To learn more about inserting documents into a collection, see the
   :ref:`rust-insert-guide` guide.

Example
-------

This example finds documents that match a query filter in the
``restaurants`` collection of the ``sample_restaurants`` database. The
example uses a ``Restaurant`` struct that has ``name`` and ``cuisine``
fields to model the documents in the collection.

The following code passes a query filter as a parameter to the
``find()`` method. The filter matches documents in which the value of
the ``cuisine`` field is ``"French"``.

.. tabs::

   .. tab:: Asynchronous
      :tabid: find-async

      .. io-code-block::
         :copyable: true

        .. input:: /includes/usage-examples/code-snippets/find-async.rs
            :language: rust
            :dedent:

        .. output::
            :language: console
            :visible: false

            // Results truncated
            ...
            Restaurant { name: "Cafe Un Deux Trois", cuisine: "French" }
            Restaurant { name: "Calliope", cuisine: "French" }
            ...

   .. tab:: Synchronous
      :tabid: find-sync

      .. io-code-block::
         :copyable: true

        .. input:: /includes/usage-examples/code-snippets/find-sync.rs
            :language: rust
            :dedent:

        .. output::
            :language: console
            :visible: false

            // Results truncated
            ...
            Restaurant { name: "Cafe Un Deux Trois", cuisine: "French" }
            Restaurant { name: "Calliope", cuisine: "French" }
            ...
